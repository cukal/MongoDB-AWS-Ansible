---
- name: Create a VPC for the whole stack
  ec2_vpc:
    aws_access_key: "{{ access_key_id }}"
    aws_secret_key: "{{ secret_access_key }}"
    region: "{{ target_region }}"
    state: present
    cidr_block: "{{ deployment.vpc_cidr }}"
    resource_tags:
      Name: "MongoDBVpc_{{ deployment.environment }}"
      Application: "{{ application }}"
    internet_gateway: True
  register: mongo_vpc

- name: Create a subnet for the leader node
  ec2_vpc_subnet:
    aws_access_key: "{{ access_key_id }}"
    aws_secret_key: "{{ secret_access_key }}"
    region: "{{ target_region }}"
    vpc_id: "{{ mongo_vpc.vpc_id }}"
    az: "{{ deployment.mongodb.leader.zone }}"
    cidr: "{{ deployment.mongodb.leader.subnet_cidr }}"
    resource_tags:
      Name: "MongoDBLeaderSubnet"
      Application: "{{ application }}"
  register: mongo_leader_subnet

- name: Per AWS, create a subnet per AZ
  ec2_vpc_subnet:
    aws_access_key: "{{ access_key_id }}"
    aws_secret_key: "{{ secret_access_key }}"
    region: "{{ target_region }}"
    vpc_id: "{{ mongo_vpc.vpc_id }}"
    az: "{{ item.zone }}"
    cidr: "{{ item.subnet_cidr }}"
    resource_tags:
      Name: "MongoDBSubnet"
      Application: "{{ application }}"
  register: mongo_subnets
  with_items: "{{ deployment.mongodb.azs }}"

- name: Iterating over subnets and registering subnet IDs to AZs
  set_fact:
    mongo_subnets_to_azs: "{{ mongo_subnets_to_azs + [ { 'subnet_id': item.subnet.id , 'zone': item.subnet.availability_zone }] }}"
  with_items: "{{ mongo_subnets.results }}"

- name: Get route table face
  ec2_vpc_route_table_facts:
    region: "{{ target_region }}"
    filters:
      vpc-id: "{{ mongo_vpc.vpc_id }}"
  register: ec2_vpc_route_table
- debug: var=ec2_vpc_route_table

- name: Add external ssh routing table
  ec2_vpc_route_table:
    aws_access_key: "{{ access_key_id }}"
    aws_secret_key: "{{ secret_access_key }}"
    region: "{{ target_region }}"
    vpc_id: "{{ mongo_vpc.vpc_id }}"
    state: present
    tags:
      Name: MongoDB SSH Public Route
    subnets:
      - "{{ vpc_subnets_cidr[0] }}"
      - "{{ vpc_subnets_cidr[1] }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: igw
  register: public_route_table

- name: Update default vpc routing table
  ec2_vpc_route_table:
    aws_access_key: "{{ access_key_id }}"
    aws_secret_key: "{{ secret_access_key }}"
    region: "{{ target_region }}"
    vpc_id: "{{ mongo_vpc.vpc_id }}"
    lookup: id
    route_table_id: "{{ ec2_vpc_route_table.route_tables[0].id }}"
    state: present
    tags:
      Name: "MongoDBVpc_{{ deployment.environment }} "